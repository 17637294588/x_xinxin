"""
Django settings for api_shop project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'l&rawrjz%vhcn(4hvwmz&eq(3jg_6aepi%h0$v76_(zx09(mbk'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',


    'rest_framework',
    'corsheaders',
    'users',
    'djcelery',
    'goods',

    'ckeditor', # 富文本编辑器
    'ckeditor_uploader', # 富文本编辑器上传图片模块

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'api_shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_shop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', #pymysql
        'NAME': 'meiduo_shop',
        'USER': 'root',
        'PASSWORD': 'mysql',
        'HOST': 'localhost',
        'PORT': 3306,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'


STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)

# 设定允许访问的端口
CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = (
    'http://127.0.0.1:8080',
    'http://localhost:8080'
)


# 配置缓存数据库
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        # 指定缓存使用的引擎
        'LOCATION': '39.106.64.101:11211',
        
        # 指定缓存服务器地址，常为本机地址
    }
}

# 将 model 里面的 users 表配置 然后再迁移
AUTH_USER_MODEL = 'users.Users'



# 配置邮箱
EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.qq.com'  # 如果是 163 改成 smtp.163.com
EMAIL_PORT = 465
EMAIL_HOST_USER = '1923613845@qq.com' # 帐号
EMAIL_HOST_PASSWORD = 'zohphqazjgrucdbj'   # 密码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# 全局配置 mem 缓存 host , port
MEMCACHE_HOST = '39.106.64.101'
MEMCACHE_PORT = 11211


# 配置 JWT
REST_FRAMEWORK = {
    # 设置这里是全局了，是所有接口都需要验证，涉及到注册，所以不用
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',
    #     # 登陆验证
    # ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
}


# token有效期配置
import datetime
JWT_AUTH = {
    # 'JWT_PRIVATE_KEY':'asjkdasldjaslasjdkl', # 自定义密钥
    'JWT_RESPONSE_PAYLOAD_HANDLER':
    # users 子应用名
    'users.views.jwt_response_payload_handler',
    'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=60000),
}

# 激活重写的JWT函数生效
AUTHENTICATION_BACKENDS = [
    'users.views.UserModelBackend',
]

# 配置微博返回的参数
WEIBO_APP_KEY = '3312233733'
WEIBO_APP_SECRET = 'c88e0c5e4abe66e89f48897ddef4be3a'
WEIBO_CALL_BACK = 'http://127.0.0.1:8080/#/come_back'   # 回调路由


# 配置消息队列  用的是 rabbitmq
import djcelery

djcelery.setup_loader()
#                  用户名   密码   公网ip    5672是rabbitmq服务端口号 
BROKER_URL = 'amqp://guest:123456@39.106.64.101:5672'





# 激活重写存储文件引擎方法
DEFAULT_FILE_STORAGE = 'goods.views.FastDfsStroage'

# 图片存阿里云的地址
FDAS_URL = 'http://39.106.64.101:8888/'

# 存进阿里云服务器里因为没有后缀(jpg/png)，图片连接要放进 img 标签里才能显示
# <img src="http://39.106.64.101:8888/group1\M00/00/00/rBHmx10A9JmAVEKNAABf71XWOL06003319" alt="">

# 配置 Fastdfs 配置文件
FDFS_CLIENT_CONF = os.path.join(BASE_DIR,'client.conf')




# 添加ckeditor富文本配置
CKEDITOR_CONFIGS = {
    'default':{
        'toolbar':'full', # 完整工具条
        'height': 300, # 编辑高度
        # 'woidth': 300, # 编辑宽度
    },
}

CKEDITOR_UPLOAD_PATH = '' # 上传图片保存路径,使用了fastDFS,这里设置为空



# 配置 redis
# CACHES = {
#     "default":{
#         "BACKEND":"django_redis.cache.RedisCache",
#         "LOCATION":"redis://39.106.64.101",
#         "OPTIONS":{
#             "CLIENT_CLSAA":"diango_redis.client.DefaultClient",
#             "CONNECTION_POOL_KWARGS":{"max_connections":100},
#             # "PASSWORD":'121352',
#         }
#     }

# }

